rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated and admin
    function isAdmin() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Classes - public can read, only admins can write
    match /classes/{classId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Coaches - public can read, only admins can write
    match /coaches/{coachId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Features - public can read, only admins can write
    match /features/{featureId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Pricing - public can read, only admins can write
    match /pricing/{pricingId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Testimonials - public can read, only admins can write
    match /testimonials/{testimonialId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Payments/Members - authenticated users can create, only admins can read/update
    match /payments/{paymentId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }
    
    // Media Library - only admins can manage media metadata
    match /media/{mediaId} {
      allow read, create, update, delete: if isAdmin();
    }
    
    // Site Content (Hero, etc) - public can read, only admins can write
    match /siteContent/{contentId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Users - only accessible to the user themselves or admins
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId || isAdmin();
    }
  }
}
